http://www.georeference.org/forum/t70597.61#91661

03-Dec-09 02:44 by "John C"


3D GIS has been a topic of interest for me for a number of years through a number of different software projects on which I have worked covering applications such as photogrammetric interpretation, stereographic reconstruction, drainage and catchment analysis, virtual reality, skyline assessment, geomorphological analysis and animal tracking.In my experience there have been a large number of domains in which a GIS capable of representing and analyzing 3D data would have been an extremely useful tool and the absence of such tools made many problems unfeasibly difficult to solve, so I agree with Ben that the time is right to be exploring solutions for quality 3D data support from GIS providers.

My expertise is as a programmer rather than a GIS practitioner, but I hope that some of the below may be of interest to this forum.Particularly with respect to the approaches that we have taken to extend the traditional 2.5D GIS data model to handle higher dimensional constructs as required.Many of the ideas below come from the Eonfusion development (www.eonfusion.com).

Much of the difficulty in extending a traditional GIS to handle 3D or higher data stems from the fact that vertices allow only X and Y information to be stored against them, so the shape of each object is constrained to the X, Y plane.Adding a third Z component (as suggested by mikedufty above) helps for points and lines, but things get very messy for polygons because a polygon is defined by the shape of its boundary and does not contain any way of storing information about how the shape varies across its interior.Worse yet, the concept of “interior” and “exterior” are only well defined as long as the polygon stays spread out across the X, Y plane.If the boundary starts bending back on itself in an X, Y, Z space then we have no idea what area of space is inside and what is not.

Unfortunately, a great number of GIS analysis operations are based on representing a polygon as its boundary line(s), which is an extremely efficient way of performing these operations, but none of these is going to work if the polygon can’t be represented this way any more.TINs provide a partial solution to this problem, by breaking surfaces up into triangle primitives, thereby allowing us to store information about the interior of an area (including Z information).Unfortunately analytical support for TINs is generally much weaker than for polygons even in the more expensive GIS applications and there are still restrictions on self overlaps in the X, Y space.A true 3D GIS needs to remove the self-overlap restriction on TINs and bring the analytical capability up to par with polygons (allowing such functionality as overlays, buffering, feature attributes, etc, etc).

So if polygons become more TIN-like and support interior vertex information then we can represent structures such as buildings, overhangs, a spherical Earth and complex surfaces in a way that CAD packages can, while retaining all the attribute rich information that we are used to handling so well with a GIS.

So points, lines and polygons can be generalized to live in a 3D world by adding Z values to vertices and using triangles to represent the space inside a polygon.Thinking topologically about these objects, a point is an object that has no variation in spatial extent, a line has a single degree of freedom to vary through space, and a polygon (or “surface” might be a better term in 3D) is an object that can vary over two degrees of freedom in space.A 3D space itself has three degrees of freedom (X, Y and Z), so there’s still room for a type of object that can vary over all three degrees of spatial freedom in 3D and this would be a volume object (and would probably need to be constructed from tetrahedra instead of triangles or line segments).A volume data type would allow us to represent such things as atmospheric observations, marine environments and geological structures in an alternative way to regular arrays (which rfriedman indicated above was important in some contexts).

Mikedufty and Nick also talk about adding more than just a Z attribute to vertices but adding T and potentially other attributes as well.With our animal tracking work this has been very important because there are numerous aspects of the environment that change continuously along the path of an animal track (X, Y, Z, time, temperature, light level, proximity to other animals, etc, etc).The attributes on a line feature cannot capture these values easily since they vary continuously along the line’s length.For anything that changes continuously like this, the vertex is the logical place to store this information.Nick quite rightly points out that we experience time in a very different way to the way we experience space (X, Y, Z), since we only ever see a single moment in time at once, whereas we see a broad range of space.Also, a single object only exists at a single place in space for any time instant, whereas it can be in the same spatial location at multiple instants in time.Despite this, we have found great value in Eonfusion in being able to apply standard GIS operations such as overlays and buffering (which are traditionally spatial operations) to datasets that vary across time.For example, determining which animals are overlapping in time at a particular site.The maths is the same, but the conceptual impact is very different.

One of the interesting consequences of adapting 2D GIS operations such as overlays to 3D equivalents is that, algorithmically speaking, the 3D algorithms are generally very similar to the corresponding 4D or 5D algorithms, but very dissimilar to the 2D algorithms (for those interested, this is because the 2D algorithms can generally be written in a greedy linear fashion, whereas the 3+D algorithms need to employ flood filling alternatives).This is perhaps going beyond the realm of this particular thread, but my point being that a 3D GIS need not be the end of the line and that time need not be considered quite as alien a concept to a GIS as it first appears.

I have not commented at all on visualization and user interaction aspects of a 3D GIS which are, of course, highly relevant and challenging topics.As Dmitri points out, the interaction of the user with the software can be the difference between a real winner and a real loser and there aren’t many examples out there of fluent and universal interfaces in 3D that are up to the job of interacting with the full complexity of information that a GIS requires.It was very interesting, however, to read KlausDE’s comments that the 3D analytical capability would have been useful in its own right even without a fancy 3D editing system.

I believe Manifold are in as good a position as any of the major GIS players to enter seriously into the 3D GIS realm, given their adoption of 3D graphics hardware for novel and interesting purposes, and their rapid development agenda.Perhaps the missing element is a strong concept from the community of how a 3D GIS should look and behave.
